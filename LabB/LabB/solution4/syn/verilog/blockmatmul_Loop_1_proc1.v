// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module blockmatmul_Loop_1_proc1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        AB_address0,
        AB_ce0,
        AB_we0,
        AB_d0,
        AB_address1,
        AB_ce1,
        AB_q1,
        it,
        Arows_dout,
        Arows_empty_n,
        Arows_read,
        Bcols_dout,
        Bcols_empty_n,
        Bcols_read
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_state3 = 7'd4;
parameter    ap_ST_fsm_state4 = 7'd8;
parameter    ap_ST_fsm_state5 = 7'd16;
parameter    ap_ST_fsm_state6 = 7'd32;
parameter    ap_ST_fsm_state7 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [3:0] AB_address0;
output   AB_ce0;
output  [63:0] AB_we0;
output  [511:0] AB_d0;
output  [3:0] AB_address1;
output   AB_ce1;
input  [511:0] AB_q1;
input  [31:0] it;
input  [511:0] Arows_dout;
input   Arows_empty_n;
output   Arows_read;
input  [511:0] Bcols_dout;
input   Bcols_empty_n;
output   Bcols_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] AB_address0;
reg AB_ce0;
reg[63:0] AB_we0;
reg[511:0] AB_d0;
reg AB_ce1;
reg Arows_read;
reg Bcols_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [9:0] A_address0;
reg    A_ce0;
reg    A_we0;
wire   [31:0] A_q0;
reg    A_ce1;
reg    A_we1;
reg    Bcols_blk_n;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln13_fu_173_p2;
wire    ap_CS_fsm_state2;
wire   [5:0] trunc_ln23_fu_199_p1;
reg   [5:0] trunc_ln23_reg_392;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln23_fu_187_p2;
wire   [31:0] tempB_a_fu_208_p1;
reg   [31:0] tempB_a_reg_397;
reg   [31:0] trunc_ln145_2_reg_402;
reg   [31:0] trunc_ln145_3_reg_407;
reg   [31:0] tempB_a_1_reg_412;
reg   [31:0] tmp_13_reg_417;
reg   [31:0] tmp_14_reg_422;
reg   [31:0] tmp_15_reg_427;
reg   [31:0] tmp_16_reg_432;
reg   [31:0] tmp_17_reg_437;
reg   [31:0] tmp_18_reg_442;
reg   [31:0] tmp_19_reg_447;
reg   [31:0] tmp_20_reg_452;
reg   [31:0] tmp_21_reg_457;
reg   [31:0] tmp_22_reg_462;
reg   [31:0] tmp_23_reg_467;
reg   [31:0] tmp_24_reg_472;
wire    grp_Loop_1_proc1_Pipeline_1_fu_130_ap_start;
wire    grp_Loop_1_proc1_Pipeline_1_fu_130_ap_done;
wire    grp_Loop_1_proc1_Pipeline_1_fu_130_ap_idle;
wire    grp_Loop_1_proc1_Pipeline_1_fu_130_ap_ready;
wire   [3:0] grp_Loop_1_proc1_Pipeline_1_fu_130_AB_address0;
wire    grp_Loop_1_proc1_Pipeline_1_fu_130_AB_ce0;
wire   [63:0] grp_Loop_1_proc1_Pipeline_1_fu_130_AB_we0;
wire   [511:0] grp_Loop_1_proc1_Pipeline_1_fu_130_AB_d0;
wire    grp_Loop_1_proc1_Pipeline_loadA_fu_136_ap_start;
wire    grp_Loop_1_proc1_Pipeline_loadA_fu_136_ap_done;
wire    grp_Loop_1_proc1_Pipeline_loadA_fu_136_ap_idle;
wire    grp_Loop_1_proc1_Pipeline_loadA_fu_136_ap_ready;
wire    grp_Loop_1_proc1_Pipeline_loadA_fu_136_Arows_read;
wire   [9:0] grp_Loop_1_proc1_Pipeline_loadA_fu_136_A_address0;
wire    grp_Loop_1_proc1_Pipeline_loadA_fu_136_A_ce0;
wire    grp_Loop_1_proc1_Pipeline_loadA_fu_136_A_we0;
wire   [31:0] grp_Loop_1_proc1_Pipeline_loadA_fu_136_A_d0;
wire   [9:0] grp_Loop_1_proc1_Pipeline_loadA_fu_136_A_address1;
wire    grp_Loop_1_proc1_Pipeline_loadA_fu_136_A_ce1;
wire    grp_Loop_1_proc1_Pipeline_loadA_fu_136_A_we1;
wire   [31:0] grp_Loop_1_proc1_Pipeline_loadA_fu_136_A_d1;
wire    grp_Loop_1_proc1_Pipeline_ps_i_fu_144_ap_start;
wire    grp_Loop_1_proc1_Pipeline_ps_i_fu_144_ap_done;
wire    grp_Loop_1_proc1_Pipeline_ps_i_fu_144_ap_idle;
wire    grp_Loop_1_proc1_Pipeline_ps_i_fu_144_ap_ready;
wire   [3:0] grp_Loop_1_proc1_Pipeline_ps_i_fu_144_AB_address0;
wire    grp_Loop_1_proc1_Pipeline_ps_i_fu_144_AB_ce0;
wire   [63:0] grp_Loop_1_proc1_Pipeline_ps_i_fu_144_AB_we0;
wire   [511:0] grp_Loop_1_proc1_Pipeline_ps_i_fu_144_AB_d0;
wire   [3:0] grp_Loop_1_proc1_Pipeline_ps_i_fu_144_AB_address1;
wire    grp_Loop_1_proc1_Pipeline_ps_i_fu_144_AB_ce1;
wire   [9:0] grp_Loop_1_proc1_Pipeline_ps_i_fu_144_A_address0;
wire    grp_Loop_1_proc1_Pipeline_ps_i_fu_144_A_ce0;
reg    grp_Loop_1_proc1_Pipeline_1_fu_130_ap_start_reg;
reg    ap_block_state1_ignore_call4;
reg    grp_Loop_1_proc1_Pipeline_loadA_fu_136_ap_start_reg;
wire    ap_CS_fsm_state3;
reg    grp_Loop_1_proc1_Pipeline_ps_i_fu_144_ap_start_reg;
wire    ap_CS_fsm_state7;
reg   [6:0] k_fu_114;
wire   [6:0] add_ln23_fu_193_p2;
wire    ap_CS_fsm_state4;
wire   [1:0] trunc_ln8_fu_169_p1;
reg   [6:0] ap_NS_fsm;
reg    ap_block_state1;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 7'd1;
#0 grp_Loop_1_proc1_Pipeline_1_fu_130_ap_start_reg = 1'b0;
#0 grp_Loop_1_proc1_Pipeline_loadA_fu_136_ap_start_reg = 1'b0;
#0 grp_Loop_1_proc1_Pipeline_ps_i_fu_144_ap_start_reg = 1'b0;
end

blockmatmul_Loop_1_proc1_A_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
A_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_address0),
    .ce0(A_ce0),
    .we0(A_we0),
    .d0(grp_Loop_1_proc1_Pipeline_loadA_fu_136_A_d0),
    .q0(A_q0),
    .address1(grp_Loop_1_proc1_Pipeline_loadA_fu_136_A_address1),
    .ce1(A_ce1),
    .we1(A_we1),
    .d1(grp_Loop_1_proc1_Pipeline_loadA_fu_136_A_d1)
);

blockmatmul_Loop_1_proc1_Pipeline_1 grp_Loop_1_proc1_Pipeline_1_fu_130(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Loop_1_proc1_Pipeline_1_fu_130_ap_start),
    .ap_done(grp_Loop_1_proc1_Pipeline_1_fu_130_ap_done),
    .ap_idle(grp_Loop_1_proc1_Pipeline_1_fu_130_ap_idle),
    .ap_ready(grp_Loop_1_proc1_Pipeline_1_fu_130_ap_ready),
    .AB_address0(grp_Loop_1_proc1_Pipeline_1_fu_130_AB_address0),
    .AB_ce0(grp_Loop_1_proc1_Pipeline_1_fu_130_AB_ce0),
    .AB_we0(grp_Loop_1_proc1_Pipeline_1_fu_130_AB_we0),
    .AB_d0(grp_Loop_1_proc1_Pipeline_1_fu_130_AB_d0)
);

blockmatmul_Loop_1_proc1_Pipeline_loadA grp_Loop_1_proc1_Pipeline_loadA_fu_136(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Loop_1_proc1_Pipeline_loadA_fu_136_ap_start),
    .ap_done(grp_Loop_1_proc1_Pipeline_loadA_fu_136_ap_done),
    .ap_idle(grp_Loop_1_proc1_Pipeline_loadA_fu_136_ap_idle),
    .ap_ready(grp_Loop_1_proc1_Pipeline_loadA_fu_136_ap_ready),
    .Arows_dout(Arows_dout),
    .Arows_empty_n(Arows_empty_n),
    .Arows_read(grp_Loop_1_proc1_Pipeline_loadA_fu_136_Arows_read),
    .A_address0(grp_Loop_1_proc1_Pipeline_loadA_fu_136_A_address0),
    .A_ce0(grp_Loop_1_proc1_Pipeline_loadA_fu_136_A_ce0),
    .A_we0(grp_Loop_1_proc1_Pipeline_loadA_fu_136_A_we0),
    .A_d0(grp_Loop_1_proc1_Pipeline_loadA_fu_136_A_d0),
    .A_address1(grp_Loop_1_proc1_Pipeline_loadA_fu_136_A_address1),
    .A_ce1(grp_Loop_1_proc1_Pipeline_loadA_fu_136_A_ce1),
    .A_we1(grp_Loop_1_proc1_Pipeline_loadA_fu_136_A_we1),
    .A_d1(grp_Loop_1_proc1_Pipeline_loadA_fu_136_A_d1)
);

blockmatmul_Loop_1_proc1_Pipeline_ps_i grp_Loop_1_proc1_Pipeline_ps_i_fu_144(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Loop_1_proc1_Pipeline_ps_i_fu_144_ap_start),
    .ap_done(grp_Loop_1_proc1_Pipeline_ps_i_fu_144_ap_done),
    .ap_idle(grp_Loop_1_proc1_Pipeline_ps_i_fu_144_ap_idle),
    .ap_ready(grp_Loop_1_proc1_Pipeline_ps_i_fu_144_ap_ready),
    .zext_ln23(trunc_ln23_reg_392),
    .AB_address0(grp_Loop_1_proc1_Pipeline_ps_i_fu_144_AB_address0),
    .AB_ce0(grp_Loop_1_proc1_Pipeline_ps_i_fu_144_AB_ce0),
    .AB_we0(grp_Loop_1_proc1_Pipeline_ps_i_fu_144_AB_we0),
    .AB_d0(grp_Loop_1_proc1_Pipeline_ps_i_fu_144_AB_d0),
    .AB_address1(grp_Loop_1_proc1_Pipeline_ps_i_fu_144_AB_address1),
    .AB_ce1(grp_Loop_1_proc1_Pipeline_ps_i_fu_144_AB_ce1),
    .AB_q1(AB_q1),
    .tempB_a(tempB_a_reg_397),
    .tempB_a_1(tempB_a_1_reg_412),
    .tmp_13(tmp_13_reg_417),
    .tmp_14(tmp_14_reg_422),
    .tmp_15(tmp_15_reg_427),
    .tmp_16(tmp_16_reg_432),
    .tmp_17(tmp_17_reg_437),
    .tmp_18(tmp_18_reg_442),
    .tmp_19(tmp_19_reg_447),
    .tmp_20(tmp_20_reg_452),
    .tmp_21(tmp_21_reg_457),
    .tmp_22(tmp_22_reg_462),
    .tmp_23(tmp_23_reg_467),
    .tmp_24(tmp_24_reg_472),
    .trunc_ln145_2(trunc_ln145_2_reg_402),
    .trunc_ln145_3(trunc_ln145_3_reg_407),
    .A_address0(grp_Loop_1_proc1_Pipeline_ps_i_fu_144_A_address0),
    .A_ce0(grp_Loop_1_proc1_Pipeline_ps_i_fu_144_A_ce0),
    .A_q0(A_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln23_fu_187_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Loop_1_proc1_Pipeline_1_fu_130_ap_start_reg <= 1'b0;
    end else begin
        if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_Loop_1_proc1_Pipeline_1_fu_130_ap_start_reg <= 1'b1;
        end else if ((grp_Loop_1_proc1_Pipeline_1_fu_130_ap_ready == 1'b1)) begin
            grp_Loop_1_proc1_Pipeline_1_fu_130_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Loop_1_proc1_Pipeline_loadA_fu_136_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln13_fu_173_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (grp_Loop_1_proc1_Pipeline_1_fu_130_ap_done == 1'b1))) begin
            grp_Loop_1_proc1_Pipeline_loadA_fu_136_ap_start_reg <= 1'b1;
        end else if ((grp_Loop_1_proc1_Pipeline_loadA_fu_136_ap_ready == 1'b1)) begin
            grp_Loop_1_proc1_Pipeline_loadA_fu_136_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Loop_1_proc1_Pipeline_ps_i_fu_144_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state6) & (1'b1 == Bcols_empty_n))) begin
            grp_Loop_1_proc1_Pipeline_ps_i_fu_144_ap_start_reg <= 1'b1;
        end else if ((grp_Loop_1_proc1_Pipeline_ps_i_fu_144_ap_ready == 1'b1)) begin
            grp_Loop_1_proc1_Pipeline_ps_i_fu_144_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        k_fu_114 <= 7'd0;
    end else if (((icmp_ln23_fu_187_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        k_fu_114 <= add_ln23_fu_193_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tempB_a_1_reg_412 <= {{Bcols_dout[63:32]}};
        tempB_a_reg_397 <= tempB_a_fu_208_p1;
        tmp_13_reg_417 <= {{Bcols_dout[95:64]}};
        tmp_14_reg_422 <= {{Bcols_dout[127:96]}};
        tmp_15_reg_427 <= {{Bcols_dout[159:128]}};
        tmp_16_reg_432 <= {{Bcols_dout[191:160]}};
        tmp_17_reg_437 <= {{Bcols_dout[223:192]}};
        tmp_18_reg_442 <= {{Bcols_dout[255:224]}};
        tmp_19_reg_447 <= {{Bcols_dout[287:256]}};
        tmp_20_reg_452 <= {{Bcols_dout[319:288]}};
        tmp_21_reg_457 <= {{Bcols_dout[351:320]}};
        tmp_22_reg_462 <= {{Bcols_dout[383:352]}};
        tmp_23_reg_467 <= {{Bcols_dout[415:384]}};
        tmp_24_reg_472 <= {{Bcols_dout[447:416]}};
        trunc_ln145_2_reg_402 <= {{Bcols_dout[479:448]}};
        trunc_ln145_3_reg_407 <= {{Bcols_dout[511:480]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_fu_187_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        trunc_ln23_reg_392 <= trunc_ln23_fu_199_p1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        AB_address0 = grp_Loop_1_proc1_Pipeline_ps_i_fu_144_AB_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        AB_address0 = grp_Loop_1_proc1_Pipeline_1_fu_130_AB_address0;
    end else begin
        AB_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        AB_ce0 = grp_Loop_1_proc1_Pipeline_ps_i_fu_144_AB_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        AB_ce0 = grp_Loop_1_proc1_Pipeline_1_fu_130_AB_ce0;
    end else begin
        AB_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        AB_ce1 = grp_Loop_1_proc1_Pipeline_ps_i_fu_144_AB_ce1;
    end else begin
        AB_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        AB_d0 = grp_Loop_1_proc1_Pipeline_ps_i_fu_144_AB_d0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        AB_d0 = grp_Loop_1_proc1_Pipeline_1_fu_130_AB_d0;
    end else begin
        AB_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        AB_we0 = grp_Loop_1_proc1_Pipeline_ps_i_fu_144_AB_we0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        AB_we0 = grp_Loop_1_proc1_Pipeline_1_fu_130_AB_we0;
    end else begin
        AB_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        A_address0 = grp_Loop_1_proc1_Pipeline_ps_i_fu_144_A_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        A_address0 = grp_Loop_1_proc1_Pipeline_loadA_fu_136_A_address0;
    end else begin
        A_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        A_ce0 = grp_Loop_1_proc1_Pipeline_ps_i_fu_144_A_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        A_ce0 = grp_Loop_1_proc1_Pipeline_loadA_fu_136_A_ce0;
    end else begin
        A_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        A_ce1 = grp_Loop_1_proc1_Pipeline_loadA_fu_136_A_ce1;
    end else begin
        A_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        A_we0 = grp_Loop_1_proc1_Pipeline_loadA_fu_136_A_we0;
    end else begin
        A_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        A_we1 = grp_Loop_1_proc1_Pipeline_loadA_fu_136_A_we1;
    end else begin
        A_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        Arows_read = grp_Loop_1_proc1_Pipeline_loadA_fu_136_Arows_read;
    end else begin
        Arows_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        Bcols_blk_n = Bcols_empty_n;
    end else begin
        Bcols_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state6) & (1'b1 == Bcols_empty_n))) begin
        Bcols_read = 1'b1;
    end else begin
        Bcols_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_Loop_1_proc1_Pipeline_1_fu_130_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_Loop_1_proc1_Pipeline_loadA_fu_136_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((1'b0 == Bcols_empty_n)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_Loop_1_proc1_Pipeline_ps_i_fu_144_ap_done == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln23_fu_187_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln23_fu_187_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln13_fu_173_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2) & (grp_Loop_1_proc1_Pipeline_1_fu_130_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if (((icmp_ln13_fu_173_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (grp_Loop_1_proc1_Pipeline_1_fu_130_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_Loop_1_proc1_Pipeline_loadA_fu_136_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln23_fu_187_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (1'b1 == Bcols_empty_n))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (grp_Loop_1_proc1_Pipeline_ps_i_fu_144_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign AB_address1 = grp_Loop_1_proc1_Pipeline_ps_i_fu_144_AB_address1;

assign add_ln23_fu_193_p2 = (k_fu_114 + 7'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state1_ignore_call4 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign grp_Loop_1_proc1_Pipeline_1_fu_130_ap_start = grp_Loop_1_proc1_Pipeline_1_fu_130_ap_start_reg;

assign grp_Loop_1_proc1_Pipeline_loadA_fu_136_ap_start = grp_Loop_1_proc1_Pipeline_loadA_fu_136_ap_start_reg;

assign grp_Loop_1_proc1_Pipeline_ps_i_fu_144_ap_start = grp_Loop_1_proc1_Pipeline_ps_i_fu_144_ap_start_reg;

assign icmp_ln13_fu_173_p2 = ((trunc_ln8_fu_169_p1 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_187_p2 = ((k_fu_114 == 7'd64) ? 1'b1 : 1'b0);

assign tempB_a_fu_208_p1 = Bcols_dout[31:0];

assign trunc_ln23_fu_199_p1 = k_fu_114[5:0];

assign trunc_ln8_fu_169_p1 = it[1:0];

endmodule //blockmatmul_Loop_1_proc1

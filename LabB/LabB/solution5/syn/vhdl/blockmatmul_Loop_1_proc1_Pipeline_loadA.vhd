-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity blockmatmul_Loop_1_proc1_Pipeline_loadA is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    Arows_dout : IN STD_LOGIC_VECTOR (511 downto 0);
    Arows_empty_n : IN STD_LOGIC;
    Arows_read : OUT STD_LOGIC;
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_ce0 : OUT STD_LOGIC;
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_we0 : OUT STD_LOGIC;
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_ce0 : OUT STD_LOGIC;
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_we0 : OUT STD_LOGIC;
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_ce0 : OUT STD_LOGIC;
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_we0 : OUT STD_LOGIC;
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_ce0 : OUT STD_LOGIC;
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_we0 : OUT STD_LOGIC;
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_4_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_4_ce0 : OUT STD_LOGIC;
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_4_we0 : OUT STD_LOGIC;
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_4_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_5_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_5_ce0 : OUT STD_LOGIC;
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_5_we0 : OUT STD_LOGIC;
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_5_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_6_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_6_ce0 : OUT STD_LOGIC;
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_6_we0 : OUT STD_LOGIC;
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_6_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_7_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_7_ce0 : OUT STD_LOGIC;
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_7_we0 : OUT STD_LOGIC;
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_7_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_8_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_8_ce0 : OUT STD_LOGIC;
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_8_we0 : OUT STD_LOGIC;
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_8_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_9_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_9_ce0 : OUT STD_LOGIC;
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_9_we0 : OUT STD_LOGIC;
    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_9_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_10_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_10_ce0 : OUT STD_LOGIC;
    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_10_we0 : OUT STD_LOGIC;
    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_10_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_11_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_11_ce0 : OUT STD_LOGIC;
    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_11_we0 : OUT STD_LOGIC;
    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_11_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_12_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_12_ce0 : OUT STD_LOGIC;
    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_12_we0 : OUT STD_LOGIC;
    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_12_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_13_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_13_ce0 : OUT STD_LOGIC;
    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_13_we0 : OUT STD_LOGIC;
    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_13_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_14_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_14_ce0 : OUT STD_LOGIC;
    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_14_we0 : OUT STD_LOGIC;
    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_14_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_15_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_15_ce0 : OUT STD_LOGIC;
    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_15_we0 : OUT STD_LOGIC;
    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_15_d0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of blockmatmul_Loop_1_proc1_Pipeline_loadA is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000000";
    constant ap_const_lv32_1DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111011111";
    constant ap_const_lv32_1E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111100000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_11F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011111";
    constant ap_const_lv32_120 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100000";
    constant ap_const_lv32_13F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111111";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_15F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101011111";
    constant ap_const_lv32_160 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101100000";
    constant ap_const_lv32_17F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111111";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_19F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110011111";
    constant ap_const_lv32_1A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110100000";
    constant ap_const_lv32_1BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110111111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln14_fu_356_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal Arows_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal i_2_reg_569 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_cast_fu_373_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_130 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln14_fu_362_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i_2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component blockmatmul_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component blockmatmul_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    i_fu_130_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln14_fu_356_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i_fu_130 <= add_ln14_fu_362_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_130 <= ap_const_lv7_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                i_2_reg_569 <= ap_sig_allocacmp_i_2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;

    Arows_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, Arows_empty_n, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Arows_blk_n <= Arows_empty_n;
        else 
            Arows_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    Arows_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            Arows_read <= ap_const_logic_1;
        else 
            Arows_read <= ap_const_logic_0;
        end if; 
    end process;

    add_ln14_fu_362_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_2) + unsigned(ap_const_lv7_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, Arows_empty_n)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_const_logic_0 = Arows_empty_n) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, Arows_empty_n)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_0 = Arows_empty_n) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(Arows_empty_n)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (ap_const_logic_0 = Arows_empty_n);
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln14_fu_356_p2)
    begin
        if (((icmp_ln14_fu_356_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i_fu_130, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_i_2 <= ap_const_lv7_0;
        else 
            ap_sig_allocacmp_i_2 <= i_fu_130;
        end if; 
    end process;

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_address0 <= i_cast_fu_373_p1(6 - 1 downto 0);

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_ce0 <= ap_const_logic_1;
        else 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_d0 <= Arows_dout(63 downto 32);

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_we0 <= ap_const_logic_1;
        else 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_address0 <= i_cast_fu_373_p1(6 - 1 downto 0);

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_ce0 <= ap_const_logic_1;
        else 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_d0 <= Arows_dout(95 downto 64);

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_we0 <= ap_const_logic_1;
        else 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_address0 <= i_cast_fu_373_p1(6 - 1 downto 0);

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_ce0 <= ap_const_logic_1;
        else 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_d0 <= Arows_dout(127 downto 96);

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_we0 <= ap_const_logic_1;
        else 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_4_address0 <= i_cast_fu_373_p1(6 - 1 downto 0);

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_4_ce0 <= ap_const_logic_1;
        else 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_4_d0 <= Arows_dout(159 downto 128);

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_4_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_4_we0 <= ap_const_logic_1;
        else 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_5_address0 <= i_cast_fu_373_p1(6 - 1 downto 0);

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_5_ce0 <= ap_const_logic_1;
        else 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_5_d0 <= Arows_dout(191 downto 160);

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_5_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_5_we0 <= ap_const_logic_1;
        else 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_6_address0 <= i_cast_fu_373_p1(6 - 1 downto 0);

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_6_ce0 <= ap_const_logic_1;
        else 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_6_d0 <= Arows_dout(223 downto 192);

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_6_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_6_we0 <= ap_const_logic_1;
        else 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_7_address0 <= i_cast_fu_373_p1(6 - 1 downto 0);

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_7_ce0 <= ap_const_logic_1;
        else 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_7_d0 <= Arows_dout(255 downto 224);

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_7_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_7_we0 <= ap_const_logic_1;
        else 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_8_address0 <= i_cast_fu_373_p1(6 - 1 downto 0);

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_8_ce0 <= ap_const_logic_1;
        else 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_8_d0 <= Arows_dout(287 downto 256);

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_8_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_8_we0 <= ap_const_logic_1;
        else 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_8_we0 <= ap_const_logic_0;
        end if; 
    end process;

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_9_address0 <= i_cast_fu_373_p1(6 - 1 downto 0);

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_9_ce0 <= ap_const_logic_1;
        else 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_9_d0 <= Arows_dout(319 downto 288);

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_9_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_9_we0 <= ap_const_logic_1;
        else 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_9_we0 <= ap_const_logic_0;
        end if; 
    end process;

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_address0 <= i_cast_fu_373_p1(6 - 1 downto 0);

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_ce0 <= ap_const_logic_1;
        else 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_d0 <= Arows_dout(32 - 1 downto 0);

    blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_we0 <= ap_const_logic_1;
        else 
            blockmatmul_stream_blockvec_0_stream_blockvec_0_blockmat_int_A_we0 <= ap_const_logic_0;
        end if; 
    end process;

    i_cast_fu_373_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_2_reg_569),64));
    icmp_ln14_fu_356_p2 <= "1" when (ap_sig_allocacmp_i_2 = ap_const_lv7_40) else "0";
    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_10_address0 <= i_cast_fu_373_p1(6 - 1 downto 0);

    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_10_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_10_d0 <= Arows_dout(351 downto 320);

    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_10_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_10_we0 <= ap_const_logic_1;
        else 
            p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_10_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_11_address0 <= i_cast_fu_373_p1(6 - 1 downto 0);

    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_11_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_11_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_11_d0 <= Arows_dout(383 downto 352);

    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_11_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_11_we0 <= ap_const_logic_1;
        else 
            p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_11_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_12_address0 <= i_cast_fu_373_p1(6 - 1 downto 0);

    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_12_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_12_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_12_d0 <= Arows_dout(415 downto 384);

    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_12_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_12_we0 <= ap_const_logic_1;
        else 
            p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_12_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_13_address0 <= i_cast_fu_373_p1(6 - 1 downto 0);

    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_13_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_13_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_13_d0 <= Arows_dout(447 downto 416);

    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_13_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_13_we0 <= ap_const_logic_1;
        else 
            p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_13_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_14_address0 <= i_cast_fu_373_p1(6 - 1 downto 0);

    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_14_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_14_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_14_d0 <= Arows_dout(479 downto 448);

    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_14_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_14_we0 <= ap_const_logic_1;
        else 
            p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_14_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_15_address0 <= i_cast_fu_373_p1(6 - 1 downto 0);

    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_15_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_15_ce0 <= ap_const_logic_1;
        else 
            p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_15_d0 <= Arows_dout(511 downto 480);

    p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_15_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_15_we0 <= ap_const_logic_1;
        else 
            p_ZZ11blockmatmulRN3hls6streamI8blockvecLi0EEES3_R8blockmatiE1A_15_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;

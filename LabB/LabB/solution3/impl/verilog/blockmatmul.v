// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="blockmatmul_blockmatmul,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.196000,HLS_SYN_LAT=2058,HLS_SYN_TPT=2059,HLS_SYN_MEM=2,HLS_SYN_DSP=0,HLS_SYN_FF=6526,HLS_SYN_LUT=3862,HLS_VERSION=2022_1}" *)

module blockmatmul (
        ap_clk,
        ap_rst,
        Arows_dout,
        Arows_empty_n,
        Arows_read,
        Bcols_dout,
        Bcols_empty_n,
        Bcols_read,
        ABpartial_address0,
        ABpartial_ce0,
        ABpartial_d0,
        ABpartial_q0,
        ABpartial_we0,
        ABpartial_address1,
        ABpartial_ce1,
        ABpartial_d1,
        ABpartial_q1,
        ABpartial_we1,
        it,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle
);


input   ap_clk;
input   ap_rst;
input  [511:0] Arows_dout;
input   Arows_empty_n;
output   Arows_read;
input  [511:0] Bcols_dout;
input   Bcols_empty_n;
output   Bcols_read;
output  [7:0] ABpartial_address0;
output   ABpartial_ce0;
output  [31:0] ABpartial_d0;
input  [31:0] ABpartial_q0;
output   ABpartial_we0;
output  [7:0] ABpartial_address1;
output   ABpartial_ce1;
output  [31:0] ABpartial_d1;
input  [31:0] ABpartial_q1;
output   ABpartial_we1;
input  [31:0] it;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;

wire   [31:0] AB_i_q0;
wire   [31:0] AB_i_q1;
wire   [31:0] AB_t_q0;
wire   [31:0] AB_t_q1;
wire   [31:0] AB_1_i_q0;
wire   [31:0] AB_1_i_q1;
wire   [31:0] AB_1_t_q0;
wire   [31:0] AB_1_t_q1;
wire   [31:0] AB_2_i_q0;
wire   [31:0] AB_2_i_q1;
wire   [31:0] AB_2_t_q0;
wire   [31:0] AB_2_t_q1;
wire   [31:0] AB_3_i_q0;
wire   [31:0] AB_3_i_q1;
wire   [31:0] AB_3_t_q0;
wire   [31:0] AB_3_t_q1;
wire   [31:0] AB_4_i_q0;
wire   [31:0] AB_4_i_q1;
wire   [31:0] AB_4_t_q0;
wire   [31:0] AB_4_t_q1;
wire   [31:0] AB_5_i_q0;
wire   [31:0] AB_5_i_q1;
wire   [31:0] AB_5_t_q0;
wire   [31:0] AB_5_t_q1;
wire   [31:0] AB_6_i_q0;
wire   [31:0] AB_6_i_q1;
wire   [31:0] AB_6_t_q0;
wire   [31:0] AB_6_t_q1;
wire   [31:0] AB_7_i_q0;
wire   [31:0] AB_7_i_q1;
wire   [31:0] AB_7_t_q0;
wire   [31:0] AB_7_t_q1;
wire   [31:0] AB_8_i_q0;
wire   [31:0] AB_8_i_q1;
wire   [31:0] AB_8_t_q0;
wire   [31:0] AB_8_t_q1;
wire   [31:0] AB_9_i_q0;
wire   [31:0] AB_9_i_q1;
wire   [31:0] AB_9_t_q0;
wire   [31:0] AB_9_t_q1;
wire   [31:0] AB_10_i_q0;
wire   [31:0] AB_10_i_q1;
wire   [31:0] AB_10_t_q0;
wire   [31:0] AB_10_t_q1;
wire   [31:0] AB_11_i_q0;
wire   [31:0] AB_11_i_q1;
wire   [31:0] AB_11_t_q0;
wire   [31:0] AB_11_t_q1;
wire   [31:0] AB_12_i_q0;
wire   [31:0] AB_12_i_q1;
wire   [31:0] AB_12_t_q0;
wire   [31:0] AB_12_t_q1;
wire   [31:0] AB_13_i_q0;
wire   [31:0] AB_13_i_q1;
wire   [31:0] AB_13_t_q0;
wire   [31:0] AB_13_t_q1;
wire   [31:0] AB_14_i_q0;
wire   [31:0] AB_14_i_q1;
wire   [31:0] AB_14_t_q0;
wire   [31:0] AB_14_t_q1;
wire   [31:0] AB_15_i_q0;
wire   [31:0] AB_15_i_q1;
wire   [31:0] AB_15_t_q0;
wire   [31:0] AB_15_t_q1;
wire    Loop_1_proc1_U0_ap_start;
wire    Loop_1_proc1_U0_ap_done;
wire    Loop_1_proc1_U0_ap_continue;
wire    Loop_1_proc1_U0_ap_idle;
wire    Loop_1_proc1_U0_ap_ready;
wire   [3:0] Loop_1_proc1_U0_AB_address0;
wire    Loop_1_proc1_U0_AB_ce0;
wire    Loop_1_proc1_U0_AB_we0;
wire   [31:0] Loop_1_proc1_U0_AB_d0;
wire   [3:0] Loop_1_proc1_U0_AB_address1;
wire    Loop_1_proc1_U0_AB_ce1;
wire   [3:0] Loop_1_proc1_U0_AB_1_address0;
wire    Loop_1_proc1_U0_AB_1_ce0;
wire    Loop_1_proc1_U0_AB_1_we0;
wire   [31:0] Loop_1_proc1_U0_AB_1_d0;
wire   [3:0] Loop_1_proc1_U0_AB_1_address1;
wire    Loop_1_proc1_U0_AB_1_ce1;
wire   [3:0] Loop_1_proc1_U0_AB_2_address0;
wire    Loop_1_proc1_U0_AB_2_ce0;
wire    Loop_1_proc1_U0_AB_2_we0;
wire   [31:0] Loop_1_proc1_U0_AB_2_d0;
wire   [3:0] Loop_1_proc1_U0_AB_2_address1;
wire    Loop_1_proc1_U0_AB_2_ce1;
wire   [3:0] Loop_1_proc1_U0_AB_3_address0;
wire    Loop_1_proc1_U0_AB_3_ce0;
wire    Loop_1_proc1_U0_AB_3_we0;
wire   [31:0] Loop_1_proc1_U0_AB_3_d0;
wire   [3:0] Loop_1_proc1_U0_AB_3_address1;
wire    Loop_1_proc1_U0_AB_3_ce1;
wire   [3:0] Loop_1_proc1_U0_AB_4_address0;
wire    Loop_1_proc1_U0_AB_4_ce0;
wire    Loop_1_proc1_U0_AB_4_we0;
wire   [31:0] Loop_1_proc1_U0_AB_4_d0;
wire   [3:0] Loop_1_proc1_U0_AB_4_address1;
wire    Loop_1_proc1_U0_AB_4_ce1;
wire   [3:0] Loop_1_proc1_U0_AB_5_address0;
wire    Loop_1_proc1_U0_AB_5_ce0;
wire    Loop_1_proc1_U0_AB_5_we0;
wire   [31:0] Loop_1_proc1_U0_AB_5_d0;
wire   [3:0] Loop_1_proc1_U0_AB_5_address1;
wire    Loop_1_proc1_U0_AB_5_ce1;
wire   [3:0] Loop_1_proc1_U0_AB_6_address0;
wire    Loop_1_proc1_U0_AB_6_ce0;
wire    Loop_1_proc1_U0_AB_6_we0;
wire   [31:0] Loop_1_proc1_U0_AB_6_d0;
wire   [3:0] Loop_1_proc1_U0_AB_6_address1;
wire    Loop_1_proc1_U0_AB_6_ce1;
wire   [3:0] Loop_1_proc1_U0_AB_7_address0;
wire    Loop_1_proc1_U0_AB_7_ce0;
wire    Loop_1_proc1_U0_AB_7_we0;
wire   [31:0] Loop_1_proc1_U0_AB_7_d0;
wire   [3:0] Loop_1_proc1_U0_AB_7_address1;
wire    Loop_1_proc1_U0_AB_7_ce1;
wire   [3:0] Loop_1_proc1_U0_AB_8_address0;
wire    Loop_1_proc1_U0_AB_8_ce0;
wire    Loop_1_proc1_U0_AB_8_we0;
wire   [31:0] Loop_1_proc1_U0_AB_8_d0;
wire   [3:0] Loop_1_proc1_U0_AB_8_address1;
wire    Loop_1_proc1_U0_AB_8_ce1;
wire   [3:0] Loop_1_proc1_U0_AB_9_address0;
wire    Loop_1_proc1_U0_AB_9_ce0;
wire    Loop_1_proc1_U0_AB_9_we0;
wire   [31:0] Loop_1_proc1_U0_AB_9_d0;
wire   [3:0] Loop_1_proc1_U0_AB_9_address1;
wire    Loop_1_proc1_U0_AB_9_ce1;
wire   [3:0] Loop_1_proc1_U0_AB_10_address0;
wire    Loop_1_proc1_U0_AB_10_ce0;
wire    Loop_1_proc1_U0_AB_10_we0;
wire   [31:0] Loop_1_proc1_U0_AB_10_d0;
wire   [3:0] Loop_1_proc1_U0_AB_10_address1;
wire    Loop_1_proc1_U0_AB_10_ce1;
wire   [3:0] Loop_1_proc1_U0_AB_11_address0;
wire    Loop_1_proc1_U0_AB_11_ce0;
wire    Loop_1_proc1_U0_AB_11_we0;
wire   [31:0] Loop_1_proc1_U0_AB_11_d0;
wire   [3:0] Loop_1_proc1_U0_AB_11_address1;
wire    Loop_1_proc1_U0_AB_11_ce1;
wire   [3:0] Loop_1_proc1_U0_AB_12_address0;
wire    Loop_1_proc1_U0_AB_12_ce0;
wire    Loop_1_proc1_U0_AB_12_we0;
wire   [31:0] Loop_1_proc1_U0_AB_12_d0;
wire   [3:0] Loop_1_proc1_U0_AB_12_address1;
wire    Loop_1_proc1_U0_AB_12_ce1;
wire   [3:0] Loop_1_proc1_U0_AB_13_address0;
wire    Loop_1_proc1_U0_AB_13_ce0;
wire    Loop_1_proc1_U0_AB_13_we0;
wire   [31:0] Loop_1_proc1_U0_AB_13_d0;
wire   [3:0] Loop_1_proc1_U0_AB_13_address1;
wire    Loop_1_proc1_U0_AB_13_ce1;
wire   [3:0] Loop_1_proc1_U0_AB_14_address0;
wire    Loop_1_proc1_U0_AB_14_ce0;
wire    Loop_1_proc1_U0_AB_14_we0;
wire   [31:0] Loop_1_proc1_U0_AB_14_d0;
wire   [3:0] Loop_1_proc1_U0_AB_14_address1;
wire    Loop_1_proc1_U0_AB_14_ce1;
wire   [3:0] Loop_1_proc1_U0_AB_15_address0;
wire    Loop_1_proc1_U0_AB_15_ce0;
wire    Loop_1_proc1_U0_AB_15_we0;
wire   [31:0] Loop_1_proc1_U0_AB_15_d0;
wire   [3:0] Loop_1_proc1_U0_AB_15_address1;
wire    Loop_1_proc1_U0_AB_15_ce1;
wire    Loop_1_proc1_U0_Arows_read;
wire    Loop_1_proc1_U0_Bcols_read;
wire    ap_channel_done_AB_15;
wire    Loop_1_proc1_U0_AB_15_full_n;
reg    ap_sync_reg_channel_write_AB_15;
wire    ap_sync_channel_write_AB_15;
wire    ap_channel_done_AB_14;
wire    Loop_1_proc1_U0_AB_14_full_n;
reg    ap_sync_reg_channel_write_AB_14;
wire    ap_sync_channel_write_AB_14;
wire    ap_channel_done_AB_13;
wire    Loop_1_proc1_U0_AB_13_full_n;
reg    ap_sync_reg_channel_write_AB_13;
wire    ap_sync_channel_write_AB_13;
wire    ap_channel_done_AB_12;
wire    Loop_1_proc1_U0_AB_12_full_n;
reg    ap_sync_reg_channel_write_AB_12;
wire    ap_sync_channel_write_AB_12;
wire    ap_channel_done_AB_11;
wire    Loop_1_proc1_U0_AB_11_full_n;
reg    ap_sync_reg_channel_write_AB_11;
wire    ap_sync_channel_write_AB_11;
wire    ap_channel_done_AB_10;
wire    Loop_1_proc1_U0_AB_10_full_n;
reg    ap_sync_reg_channel_write_AB_10;
wire    ap_sync_channel_write_AB_10;
wire    ap_channel_done_AB_9;
wire    Loop_1_proc1_U0_AB_9_full_n;
reg    ap_sync_reg_channel_write_AB_9;
wire    ap_sync_channel_write_AB_9;
wire    ap_channel_done_AB_8;
wire    Loop_1_proc1_U0_AB_8_full_n;
reg    ap_sync_reg_channel_write_AB_8;
wire    ap_sync_channel_write_AB_8;
wire    ap_channel_done_AB_7;
wire    Loop_1_proc1_U0_AB_7_full_n;
reg    ap_sync_reg_channel_write_AB_7;
wire    ap_sync_channel_write_AB_7;
wire    ap_channel_done_AB_6;
wire    Loop_1_proc1_U0_AB_6_full_n;
reg    ap_sync_reg_channel_write_AB_6;
wire    ap_sync_channel_write_AB_6;
wire    ap_channel_done_AB_5;
wire    Loop_1_proc1_U0_AB_5_full_n;
reg    ap_sync_reg_channel_write_AB_5;
wire    ap_sync_channel_write_AB_5;
wire    ap_channel_done_AB_4;
wire    Loop_1_proc1_U0_AB_4_full_n;
reg    ap_sync_reg_channel_write_AB_4;
wire    ap_sync_channel_write_AB_4;
wire    ap_channel_done_AB_3;
wire    Loop_1_proc1_U0_AB_3_full_n;
reg    ap_sync_reg_channel_write_AB_3;
wire    ap_sync_channel_write_AB_3;
wire    ap_channel_done_AB_2;
wire    Loop_1_proc1_U0_AB_2_full_n;
reg    ap_sync_reg_channel_write_AB_2;
wire    ap_sync_channel_write_AB_2;
wire    ap_channel_done_AB_1;
wire    Loop_1_proc1_U0_AB_1_full_n;
reg    ap_sync_reg_channel_write_AB_1;
wire    ap_sync_channel_write_AB_1;
wire    ap_channel_done_AB;
wire    Loop_1_proc1_U0_AB_full_n;
reg    ap_sync_reg_channel_write_AB;
wire    ap_sync_channel_write_AB;
wire    Loop_writeoutput_proc_U0_ap_start;
wire    Loop_writeoutput_proc_U0_ap_done;
wire    Loop_writeoutput_proc_U0_ap_continue;
wire    Loop_writeoutput_proc_U0_ap_idle;
wire    Loop_writeoutput_proc_U0_ap_ready;
wire   [3:0] Loop_writeoutput_proc_U0_AB_address0;
wire    Loop_writeoutput_proc_U0_AB_ce0;
wire   [3:0] Loop_writeoutput_proc_U0_AB_1_address0;
wire    Loop_writeoutput_proc_U0_AB_1_ce0;
wire   [3:0] Loop_writeoutput_proc_U0_AB_2_address0;
wire    Loop_writeoutput_proc_U0_AB_2_ce0;
wire   [3:0] Loop_writeoutput_proc_U0_AB_3_address0;
wire    Loop_writeoutput_proc_U0_AB_3_ce0;
wire   [3:0] Loop_writeoutput_proc_U0_AB_4_address0;
wire    Loop_writeoutput_proc_U0_AB_4_ce0;
wire   [3:0] Loop_writeoutput_proc_U0_AB_5_address0;
wire    Loop_writeoutput_proc_U0_AB_5_ce0;
wire   [3:0] Loop_writeoutput_proc_U0_AB_6_address0;
wire    Loop_writeoutput_proc_U0_AB_6_ce0;
wire   [3:0] Loop_writeoutput_proc_U0_AB_7_address0;
wire    Loop_writeoutput_proc_U0_AB_7_ce0;
wire   [3:0] Loop_writeoutput_proc_U0_AB_8_address0;
wire    Loop_writeoutput_proc_U0_AB_8_ce0;
wire   [3:0] Loop_writeoutput_proc_U0_AB_9_address0;
wire    Loop_writeoutput_proc_U0_AB_9_ce0;
wire   [3:0] Loop_writeoutput_proc_U0_AB_10_address0;
wire    Loop_writeoutput_proc_U0_AB_10_ce0;
wire   [3:0] Loop_writeoutput_proc_U0_AB_11_address0;
wire    Loop_writeoutput_proc_U0_AB_11_ce0;
wire   [3:0] Loop_writeoutput_proc_U0_AB_12_address0;
wire    Loop_writeoutput_proc_U0_AB_12_ce0;
wire   [3:0] Loop_writeoutput_proc_U0_AB_13_address0;
wire    Loop_writeoutput_proc_U0_AB_13_ce0;
wire   [3:0] Loop_writeoutput_proc_U0_AB_14_address0;
wire    Loop_writeoutput_proc_U0_AB_14_ce0;
wire   [3:0] Loop_writeoutput_proc_U0_AB_15_address0;
wire    Loop_writeoutput_proc_U0_AB_15_ce0;
wire   [7:0] Loop_writeoutput_proc_U0_ABpartial_address0;
wire    Loop_writeoutput_proc_U0_ABpartial_ce0;
wire    Loop_writeoutput_proc_U0_ABpartial_we0;
wire   [31:0] Loop_writeoutput_proc_U0_ABpartial_d0;
wire    AB_i_full_n;
wire    AB_t_empty_n;
wire    AB_1_i_full_n;
wire    AB_1_t_empty_n;
wire    AB_2_i_full_n;
wire    AB_2_t_empty_n;
wire    AB_3_i_full_n;
wire    AB_3_t_empty_n;
wire    AB_4_i_full_n;
wire    AB_4_t_empty_n;
wire    AB_5_i_full_n;
wire    AB_5_t_empty_n;
wire    AB_6_i_full_n;
wire    AB_6_t_empty_n;
wire    AB_7_i_full_n;
wire    AB_7_t_empty_n;
wire    AB_8_i_full_n;
wire    AB_8_t_empty_n;
wire    AB_9_i_full_n;
wire    AB_9_t_empty_n;
wire    AB_10_i_full_n;
wire    AB_10_t_empty_n;
wire    AB_11_i_full_n;
wire    AB_11_t_empty_n;
wire    AB_12_i_full_n;
wire    AB_12_t_empty_n;
wire    AB_13_i_full_n;
wire    AB_13_t_empty_n;
wire    AB_14_i_full_n;
wire    AB_14_t_empty_n;
wire    AB_15_i_full_n;
wire    AB_15_t_empty_n;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_AB_15 = 1'b0;
#0 ap_sync_reg_channel_write_AB_14 = 1'b0;
#0 ap_sync_reg_channel_write_AB_13 = 1'b0;
#0 ap_sync_reg_channel_write_AB_12 = 1'b0;
#0 ap_sync_reg_channel_write_AB_11 = 1'b0;
#0 ap_sync_reg_channel_write_AB_10 = 1'b0;
#0 ap_sync_reg_channel_write_AB_9 = 1'b0;
#0 ap_sync_reg_channel_write_AB_8 = 1'b0;
#0 ap_sync_reg_channel_write_AB_7 = 1'b0;
#0 ap_sync_reg_channel_write_AB_6 = 1'b0;
#0 ap_sync_reg_channel_write_AB_5 = 1'b0;
#0 ap_sync_reg_channel_write_AB_4 = 1'b0;
#0 ap_sync_reg_channel_write_AB_3 = 1'b0;
#0 ap_sync_reg_channel_write_AB_2 = 1'b0;
#0 ap_sync_reg_channel_write_AB_1 = 1'b0;
#0 ap_sync_reg_channel_write_AB = 1'b0;
end

blockmatmul_AB_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
AB_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(Loop_1_proc1_U0_AB_address0),
    .i_ce0(Loop_1_proc1_U0_AB_ce0),
    .i_we0(Loop_1_proc1_U0_AB_we0),
    .i_d0(Loop_1_proc1_U0_AB_d0),
    .i_q0(AB_i_q0),
    .i_address1(Loop_1_proc1_U0_AB_address1),
    .i_ce1(Loop_1_proc1_U0_AB_ce1),
    .i_q1(AB_i_q1),
    .t_address0(Loop_writeoutput_proc_U0_AB_address0),
    .t_ce0(Loop_writeoutput_proc_U0_AB_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(AB_t_q0),
    .t_address1(4'd0),
    .t_ce1(1'b0),
    .t_q1(AB_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(AB_i_full_n),
    .i_write(ap_channel_done_AB),
    .t_empty_n(AB_t_empty_n),
    .t_read(Loop_writeoutput_proc_U0_ap_ready)
);

blockmatmul_AB_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
AB_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(Loop_1_proc1_U0_AB_1_address0),
    .i_ce0(Loop_1_proc1_U0_AB_1_ce0),
    .i_we0(Loop_1_proc1_U0_AB_1_we0),
    .i_d0(Loop_1_proc1_U0_AB_1_d0),
    .i_q0(AB_1_i_q0),
    .i_address1(Loop_1_proc1_U0_AB_1_address1),
    .i_ce1(Loop_1_proc1_U0_AB_1_ce1),
    .i_q1(AB_1_i_q1),
    .t_address0(Loop_writeoutput_proc_U0_AB_1_address0),
    .t_ce0(Loop_writeoutput_proc_U0_AB_1_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(AB_1_t_q0),
    .t_address1(4'd0),
    .t_ce1(1'b0),
    .t_q1(AB_1_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(AB_1_i_full_n),
    .i_write(ap_channel_done_AB_1),
    .t_empty_n(AB_1_t_empty_n),
    .t_read(Loop_writeoutput_proc_U0_ap_ready)
);

blockmatmul_AB_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
AB_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(Loop_1_proc1_U0_AB_2_address0),
    .i_ce0(Loop_1_proc1_U0_AB_2_ce0),
    .i_we0(Loop_1_proc1_U0_AB_2_we0),
    .i_d0(Loop_1_proc1_U0_AB_2_d0),
    .i_q0(AB_2_i_q0),
    .i_address1(Loop_1_proc1_U0_AB_2_address1),
    .i_ce1(Loop_1_proc1_U0_AB_2_ce1),
    .i_q1(AB_2_i_q1),
    .t_address0(Loop_writeoutput_proc_U0_AB_2_address0),
    .t_ce0(Loop_writeoutput_proc_U0_AB_2_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(AB_2_t_q0),
    .t_address1(4'd0),
    .t_ce1(1'b0),
    .t_q1(AB_2_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(AB_2_i_full_n),
    .i_write(ap_channel_done_AB_2),
    .t_empty_n(AB_2_t_empty_n),
    .t_read(Loop_writeoutput_proc_U0_ap_ready)
);

blockmatmul_AB_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
AB_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(Loop_1_proc1_U0_AB_3_address0),
    .i_ce0(Loop_1_proc1_U0_AB_3_ce0),
    .i_we0(Loop_1_proc1_U0_AB_3_we0),
    .i_d0(Loop_1_proc1_U0_AB_3_d0),
    .i_q0(AB_3_i_q0),
    .i_address1(Loop_1_proc1_U0_AB_3_address1),
    .i_ce1(Loop_1_proc1_U0_AB_3_ce1),
    .i_q1(AB_3_i_q1),
    .t_address0(Loop_writeoutput_proc_U0_AB_3_address0),
    .t_ce0(Loop_writeoutput_proc_U0_AB_3_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(AB_3_t_q0),
    .t_address1(4'd0),
    .t_ce1(1'b0),
    .t_q1(AB_3_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(AB_3_i_full_n),
    .i_write(ap_channel_done_AB_3),
    .t_empty_n(AB_3_t_empty_n),
    .t_read(Loop_writeoutput_proc_U0_ap_ready)
);

blockmatmul_AB_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
AB_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(Loop_1_proc1_U0_AB_4_address0),
    .i_ce0(Loop_1_proc1_U0_AB_4_ce0),
    .i_we0(Loop_1_proc1_U0_AB_4_we0),
    .i_d0(Loop_1_proc1_U0_AB_4_d0),
    .i_q0(AB_4_i_q0),
    .i_address1(Loop_1_proc1_U0_AB_4_address1),
    .i_ce1(Loop_1_proc1_U0_AB_4_ce1),
    .i_q1(AB_4_i_q1),
    .t_address0(Loop_writeoutput_proc_U0_AB_4_address0),
    .t_ce0(Loop_writeoutput_proc_U0_AB_4_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(AB_4_t_q0),
    .t_address1(4'd0),
    .t_ce1(1'b0),
    .t_q1(AB_4_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(AB_4_i_full_n),
    .i_write(ap_channel_done_AB_4),
    .t_empty_n(AB_4_t_empty_n),
    .t_read(Loop_writeoutput_proc_U0_ap_ready)
);

blockmatmul_AB_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
AB_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(Loop_1_proc1_U0_AB_5_address0),
    .i_ce0(Loop_1_proc1_U0_AB_5_ce0),
    .i_we0(Loop_1_proc1_U0_AB_5_we0),
    .i_d0(Loop_1_proc1_U0_AB_5_d0),
    .i_q0(AB_5_i_q0),
    .i_address1(Loop_1_proc1_U0_AB_5_address1),
    .i_ce1(Loop_1_proc1_U0_AB_5_ce1),
    .i_q1(AB_5_i_q1),
    .t_address0(Loop_writeoutput_proc_U0_AB_5_address0),
    .t_ce0(Loop_writeoutput_proc_U0_AB_5_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(AB_5_t_q0),
    .t_address1(4'd0),
    .t_ce1(1'b0),
    .t_q1(AB_5_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(AB_5_i_full_n),
    .i_write(ap_channel_done_AB_5),
    .t_empty_n(AB_5_t_empty_n),
    .t_read(Loop_writeoutput_proc_U0_ap_ready)
);

blockmatmul_AB_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
AB_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(Loop_1_proc1_U0_AB_6_address0),
    .i_ce0(Loop_1_proc1_U0_AB_6_ce0),
    .i_we0(Loop_1_proc1_U0_AB_6_we0),
    .i_d0(Loop_1_proc1_U0_AB_6_d0),
    .i_q0(AB_6_i_q0),
    .i_address1(Loop_1_proc1_U0_AB_6_address1),
    .i_ce1(Loop_1_proc1_U0_AB_6_ce1),
    .i_q1(AB_6_i_q1),
    .t_address0(Loop_writeoutput_proc_U0_AB_6_address0),
    .t_ce0(Loop_writeoutput_proc_U0_AB_6_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(AB_6_t_q0),
    .t_address1(4'd0),
    .t_ce1(1'b0),
    .t_q1(AB_6_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(AB_6_i_full_n),
    .i_write(ap_channel_done_AB_6),
    .t_empty_n(AB_6_t_empty_n),
    .t_read(Loop_writeoutput_proc_U0_ap_ready)
);

blockmatmul_AB_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
AB_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(Loop_1_proc1_U0_AB_7_address0),
    .i_ce0(Loop_1_proc1_U0_AB_7_ce0),
    .i_we0(Loop_1_proc1_U0_AB_7_we0),
    .i_d0(Loop_1_proc1_U0_AB_7_d0),
    .i_q0(AB_7_i_q0),
    .i_address1(Loop_1_proc1_U0_AB_7_address1),
    .i_ce1(Loop_1_proc1_U0_AB_7_ce1),
    .i_q1(AB_7_i_q1),
    .t_address0(Loop_writeoutput_proc_U0_AB_7_address0),
    .t_ce0(Loop_writeoutput_proc_U0_AB_7_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(AB_7_t_q0),
    .t_address1(4'd0),
    .t_ce1(1'b0),
    .t_q1(AB_7_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(AB_7_i_full_n),
    .i_write(ap_channel_done_AB_7),
    .t_empty_n(AB_7_t_empty_n),
    .t_read(Loop_writeoutput_proc_U0_ap_ready)
);

blockmatmul_AB_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
AB_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(Loop_1_proc1_U0_AB_8_address0),
    .i_ce0(Loop_1_proc1_U0_AB_8_ce0),
    .i_we0(Loop_1_proc1_U0_AB_8_we0),
    .i_d0(Loop_1_proc1_U0_AB_8_d0),
    .i_q0(AB_8_i_q0),
    .i_address1(Loop_1_proc1_U0_AB_8_address1),
    .i_ce1(Loop_1_proc1_U0_AB_8_ce1),
    .i_q1(AB_8_i_q1),
    .t_address0(Loop_writeoutput_proc_U0_AB_8_address0),
    .t_ce0(Loop_writeoutput_proc_U0_AB_8_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(AB_8_t_q0),
    .t_address1(4'd0),
    .t_ce1(1'b0),
    .t_q1(AB_8_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(AB_8_i_full_n),
    .i_write(ap_channel_done_AB_8),
    .t_empty_n(AB_8_t_empty_n),
    .t_read(Loop_writeoutput_proc_U0_ap_ready)
);

blockmatmul_AB_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
AB_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(Loop_1_proc1_U0_AB_9_address0),
    .i_ce0(Loop_1_proc1_U0_AB_9_ce0),
    .i_we0(Loop_1_proc1_U0_AB_9_we0),
    .i_d0(Loop_1_proc1_U0_AB_9_d0),
    .i_q0(AB_9_i_q0),
    .i_address1(Loop_1_proc1_U0_AB_9_address1),
    .i_ce1(Loop_1_proc1_U0_AB_9_ce1),
    .i_q1(AB_9_i_q1),
    .t_address0(Loop_writeoutput_proc_U0_AB_9_address0),
    .t_ce0(Loop_writeoutput_proc_U0_AB_9_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(AB_9_t_q0),
    .t_address1(4'd0),
    .t_ce1(1'b0),
    .t_q1(AB_9_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(AB_9_i_full_n),
    .i_write(ap_channel_done_AB_9),
    .t_empty_n(AB_9_t_empty_n),
    .t_read(Loop_writeoutput_proc_U0_ap_ready)
);

blockmatmul_AB_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
AB_10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(Loop_1_proc1_U0_AB_10_address0),
    .i_ce0(Loop_1_proc1_U0_AB_10_ce0),
    .i_we0(Loop_1_proc1_U0_AB_10_we0),
    .i_d0(Loop_1_proc1_U0_AB_10_d0),
    .i_q0(AB_10_i_q0),
    .i_address1(Loop_1_proc1_U0_AB_10_address1),
    .i_ce1(Loop_1_proc1_U0_AB_10_ce1),
    .i_q1(AB_10_i_q1),
    .t_address0(Loop_writeoutput_proc_U0_AB_10_address0),
    .t_ce0(Loop_writeoutput_proc_U0_AB_10_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(AB_10_t_q0),
    .t_address1(4'd0),
    .t_ce1(1'b0),
    .t_q1(AB_10_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(AB_10_i_full_n),
    .i_write(ap_channel_done_AB_10),
    .t_empty_n(AB_10_t_empty_n),
    .t_read(Loop_writeoutput_proc_U0_ap_ready)
);

blockmatmul_AB_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
AB_11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(Loop_1_proc1_U0_AB_11_address0),
    .i_ce0(Loop_1_proc1_U0_AB_11_ce0),
    .i_we0(Loop_1_proc1_U0_AB_11_we0),
    .i_d0(Loop_1_proc1_U0_AB_11_d0),
    .i_q0(AB_11_i_q0),
    .i_address1(Loop_1_proc1_U0_AB_11_address1),
    .i_ce1(Loop_1_proc1_U0_AB_11_ce1),
    .i_q1(AB_11_i_q1),
    .t_address0(Loop_writeoutput_proc_U0_AB_11_address0),
    .t_ce0(Loop_writeoutput_proc_U0_AB_11_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(AB_11_t_q0),
    .t_address1(4'd0),
    .t_ce1(1'b0),
    .t_q1(AB_11_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(AB_11_i_full_n),
    .i_write(ap_channel_done_AB_11),
    .t_empty_n(AB_11_t_empty_n),
    .t_read(Loop_writeoutput_proc_U0_ap_ready)
);

blockmatmul_AB_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
AB_12_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(Loop_1_proc1_U0_AB_12_address0),
    .i_ce0(Loop_1_proc1_U0_AB_12_ce0),
    .i_we0(Loop_1_proc1_U0_AB_12_we0),
    .i_d0(Loop_1_proc1_U0_AB_12_d0),
    .i_q0(AB_12_i_q0),
    .i_address1(Loop_1_proc1_U0_AB_12_address1),
    .i_ce1(Loop_1_proc1_U0_AB_12_ce1),
    .i_q1(AB_12_i_q1),
    .t_address0(Loop_writeoutput_proc_U0_AB_12_address0),
    .t_ce0(Loop_writeoutput_proc_U0_AB_12_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(AB_12_t_q0),
    .t_address1(4'd0),
    .t_ce1(1'b0),
    .t_q1(AB_12_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(AB_12_i_full_n),
    .i_write(ap_channel_done_AB_12),
    .t_empty_n(AB_12_t_empty_n),
    .t_read(Loop_writeoutput_proc_U0_ap_ready)
);

blockmatmul_AB_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
AB_13_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(Loop_1_proc1_U0_AB_13_address0),
    .i_ce0(Loop_1_proc1_U0_AB_13_ce0),
    .i_we0(Loop_1_proc1_U0_AB_13_we0),
    .i_d0(Loop_1_proc1_U0_AB_13_d0),
    .i_q0(AB_13_i_q0),
    .i_address1(Loop_1_proc1_U0_AB_13_address1),
    .i_ce1(Loop_1_proc1_U0_AB_13_ce1),
    .i_q1(AB_13_i_q1),
    .t_address0(Loop_writeoutput_proc_U0_AB_13_address0),
    .t_ce0(Loop_writeoutput_proc_U0_AB_13_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(AB_13_t_q0),
    .t_address1(4'd0),
    .t_ce1(1'b0),
    .t_q1(AB_13_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(AB_13_i_full_n),
    .i_write(ap_channel_done_AB_13),
    .t_empty_n(AB_13_t_empty_n),
    .t_read(Loop_writeoutput_proc_U0_ap_ready)
);

blockmatmul_AB_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
AB_14_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(Loop_1_proc1_U0_AB_14_address0),
    .i_ce0(Loop_1_proc1_U0_AB_14_ce0),
    .i_we0(Loop_1_proc1_U0_AB_14_we0),
    .i_d0(Loop_1_proc1_U0_AB_14_d0),
    .i_q0(AB_14_i_q0),
    .i_address1(Loop_1_proc1_U0_AB_14_address1),
    .i_ce1(Loop_1_proc1_U0_AB_14_ce1),
    .i_q1(AB_14_i_q1),
    .t_address0(Loop_writeoutput_proc_U0_AB_14_address0),
    .t_ce0(Loop_writeoutput_proc_U0_AB_14_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(AB_14_t_q0),
    .t_address1(4'd0),
    .t_ce1(1'b0),
    .t_q1(AB_14_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(AB_14_i_full_n),
    .i_write(ap_channel_done_AB_14),
    .t_empty_n(AB_14_t_empty_n),
    .t_read(Loop_writeoutput_proc_U0_ap_ready)
);

blockmatmul_AB_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
AB_15_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(Loop_1_proc1_U0_AB_15_address0),
    .i_ce0(Loop_1_proc1_U0_AB_15_ce0),
    .i_we0(Loop_1_proc1_U0_AB_15_we0),
    .i_d0(Loop_1_proc1_U0_AB_15_d0),
    .i_q0(AB_15_i_q0),
    .i_address1(Loop_1_proc1_U0_AB_15_address1),
    .i_ce1(Loop_1_proc1_U0_AB_15_ce1),
    .i_q1(AB_15_i_q1),
    .t_address0(Loop_writeoutput_proc_U0_AB_15_address0),
    .t_ce0(Loop_writeoutput_proc_U0_AB_15_ce0),
    .t_we0(1'b0),
    .t_d0(32'd0),
    .t_q0(AB_15_t_q0),
    .t_address1(4'd0),
    .t_ce1(1'b0),
    .t_q1(AB_15_t_q1),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(AB_15_i_full_n),
    .i_write(ap_channel_done_AB_15),
    .t_empty_n(AB_15_t_empty_n),
    .t_read(Loop_writeoutput_proc_U0_ap_ready)
);

blockmatmul_Loop_1_proc1 Loop_1_proc1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Loop_1_proc1_U0_ap_start),
    .ap_done(Loop_1_proc1_U0_ap_done),
    .ap_continue(Loop_1_proc1_U0_ap_continue),
    .ap_idle(Loop_1_proc1_U0_ap_idle),
    .ap_ready(Loop_1_proc1_U0_ap_ready),
    .AB_address0(Loop_1_proc1_U0_AB_address0),
    .AB_ce0(Loop_1_proc1_U0_AB_ce0),
    .AB_we0(Loop_1_proc1_U0_AB_we0),
    .AB_d0(Loop_1_proc1_U0_AB_d0),
    .AB_address1(Loop_1_proc1_U0_AB_address1),
    .AB_ce1(Loop_1_proc1_U0_AB_ce1),
    .AB_q1(AB_i_q1),
    .AB_1_address0(Loop_1_proc1_U0_AB_1_address0),
    .AB_1_ce0(Loop_1_proc1_U0_AB_1_ce0),
    .AB_1_we0(Loop_1_proc1_U0_AB_1_we0),
    .AB_1_d0(Loop_1_proc1_U0_AB_1_d0),
    .AB_1_address1(Loop_1_proc1_U0_AB_1_address1),
    .AB_1_ce1(Loop_1_proc1_U0_AB_1_ce1),
    .AB_1_q1(AB_1_i_q1),
    .AB_2_address0(Loop_1_proc1_U0_AB_2_address0),
    .AB_2_ce0(Loop_1_proc1_U0_AB_2_ce0),
    .AB_2_we0(Loop_1_proc1_U0_AB_2_we0),
    .AB_2_d0(Loop_1_proc1_U0_AB_2_d0),
    .AB_2_address1(Loop_1_proc1_U0_AB_2_address1),
    .AB_2_ce1(Loop_1_proc1_U0_AB_2_ce1),
    .AB_2_q1(AB_2_i_q1),
    .AB_3_address0(Loop_1_proc1_U0_AB_3_address0),
    .AB_3_ce0(Loop_1_proc1_U0_AB_3_ce0),
    .AB_3_we0(Loop_1_proc1_U0_AB_3_we0),
    .AB_3_d0(Loop_1_proc1_U0_AB_3_d0),
    .AB_3_address1(Loop_1_proc1_U0_AB_3_address1),
    .AB_3_ce1(Loop_1_proc1_U0_AB_3_ce1),
    .AB_3_q1(AB_3_i_q1),
    .AB_4_address0(Loop_1_proc1_U0_AB_4_address0),
    .AB_4_ce0(Loop_1_proc1_U0_AB_4_ce0),
    .AB_4_we0(Loop_1_proc1_U0_AB_4_we0),
    .AB_4_d0(Loop_1_proc1_U0_AB_4_d0),
    .AB_4_address1(Loop_1_proc1_U0_AB_4_address1),
    .AB_4_ce1(Loop_1_proc1_U0_AB_4_ce1),
    .AB_4_q1(AB_4_i_q1),
    .AB_5_address0(Loop_1_proc1_U0_AB_5_address0),
    .AB_5_ce0(Loop_1_proc1_U0_AB_5_ce0),
    .AB_5_we0(Loop_1_proc1_U0_AB_5_we0),
    .AB_5_d0(Loop_1_proc1_U0_AB_5_d0),
    .AB_5_address1(Loop_1_proc1_U0_AB_5_address1),
    .AB_5_ce1(Loop_1_proc1_U0_AB_5_ce1),
    .AB_5_q1(AB_5_i_q1),
    .AB_6_address0(Loop_1_proc1_U0_AB_6_address0),
    .AB_6_ce0(Loop_1_proc1_U0_AB_6_ce0),
    .AB_6_we0(Loop_1_proc1_U0_AB_6_we0),
    .AB_6_d0(Loop_1_proc1_U0_AB_6_d0),
    .AB_6_address1(Loop_1_proc1_U0_AB_6_address1),
    .AB_6_ce1(Loop_1_proc1_U0_AB_6_ce1),
    .AB_6_q1(AB_6_i_q1),
    .AB_7_address0(Loop_1_proc1_U0_AB_7_address0),
    .AB_7_ce0(Loop_1_proc1_U0_AB_7_ce0),
    .AB_7_we0(Loop_1_proc1_U0_AB_7_we0),
    .AB_7_d0(Loop_1_proc1_U0_AB_7_d0),
    .AB_7_address1(Loop_1_proc1_U0_AB_7_address1),
    .AB_7_ce1(Loop_1_proc1_U0_AB_7_ce1),
    .AB_7_q1(AB_7_i_q1),
    .AB_8_address0(Loop_1_proc1_U0_AB_8_address0),
    .AB_8_ce0(Loop_1_proc1_U0_AB_8_ce0),
    .AB_8_we0(Loop_1_proc1_U0_AB_8_we0),
    .AB_8_d0(Loop_1_proc1_U0_AB_8_d0),
    .AB_8_address1(Loop_1_proc1_U0_AB_8_address1),
    .AB_8_ce1(Loop_1_proc1_U0_AB_8_ce1),
    .AB_8_q1(AB_8_i_q1),
    .AB_9_address0(Loop_1_proc1_U0_AB_9_address0),
    .AB_9_ce0(Loop_1_proc1_U0_AB_9_ce0),
    .AB_9_we0(Loop_1_proc1_U0_AB_9_we0),
    .AB_9_d0(Loop_1_proc1_U0_AB_9_d0),
    .AB_9_address1(Loop_1_proc1_U0_AB_9_address1),
    .AB_9_ce1(Loop_1_proc1_U0_AB_9_ce1),
    .AB_9_q1(AB_9_i_q1),
    .AB_10_address0(Loop_1_proc1_U0_AB_10_address0),
    .AB_10_ce0(Loop_1_proc1_U0_AB_10_ce0),
    .AB_10_we0(Loop_1_proc1_U0_AB_10_we0),
    .AB_10_d0(Loop_1_proc1_U0_AB_10_d0),
    .AB_10_address1(Loop_1_proc1_U0_AB_10_address1),
    .AB_10_ce1(Loop_1_proc1_U0_AB_10_ce1),
    .AB_10_q1(AB_10_i_q1),
    .AB_11_address0(Loop_1_proc1_U0_AB_11_address0),
    .AB_11_ce0(Loop_1_proc1_U0_AB_11_ce0),
    .AB_11_we0(Loop_1_proc1_U0_AB_11_we0),
    .AB_11_d0(Loop_1_proc1_U0_AB_11_d0),
    .AB_11_address1(Loop_1_proc1_U0_AB_11_address1),
    .AB_11_ce1(Loop_1_proc1_U0_AB_11_ce1),
    .AB_11_q1(AB_11_i_q1),
    .AB_12_address0(Loop_1_proc1_U0_AB_12_address0),
    .AB_12_ce0(Loop_1_proc1_U0_AB_12_ce0),
    .AB_12_we0(Loop_1_proc1_U0_AB_12_we0),
    .AB_12_d0(Loop_1_proc1_U0_AB_12_d0),
    .AB_12_address1(Loop_1_proc1_U0_AB_12_address1),
    .AB_12_ce1(Loop_1_proc1_U0_AB_12_ce1),
    .AB_12_q1(AB_12_i_q1),
    .AB_13_address0(Loop_1_proc1_U0_AB_13_address0),
    .AB_13_ce0(Loop_1_proc1_U0_AB_13_ce0),
    .AB_13_we0(Loop_1_proc1_U0_AB_13_we0),
    .AB_13_d0(Loop_1_proc1_U0_AB_13_d0),
    .AB_13_address1(Loop_1_proc1_U0_AB_13_address1),
    .AB_13_ce1(Loop_1_proc1_U0_AB_13_ce1),
    .AB_13_q1(AB_13_i_q1),
    .AB_14_address0(Loop_1_proc1_U0_AB_14_address0),
    .AB_14_ce0(Loop_1_proc1_U0_AB_14_ce0),
    .AB_14_we0(Loop_1_proc1_U0_AB_14_we0),
    .AB_14_d0(Loop_1_proc1_U0_AB_14_d0),
    .AB_14_address1(Loop_1_proc1_U0_AB_14_address1),
    .AB_14_ce1(Loop_1_proc1_U0_AB_14_ce1),
    .AB_14_q1(AB_14_i_q1),
    .AB_15_address0(Loop_1_proc1_U0_AB_15_address0),
    .AB_15_ce0(Loop_1_proc1_U0_AB_15_ce0),
    .AB_15_we0(Loop_1_proc1_U0_AB_15_we0),
    .AB_15_d0(Loop_1_proc1_U0_AB_15_d0),
    .AB_15_address1(Loop_1_proc1_U0_AB_15_address1),
    .AB_15_ce1(Loop_1_proc1_U0_AB_15_ce1),
    .AB_15_q1(AB_15_i_q1),
    .it(it),
    .Arows_dout(Arows_dout),
    .Arows_empty_n(Arows_empty_n),
    .Arows_read(Loop_1_proc1_U0_Arows_read),
    .Bcols_dout(Bcols_dout),
    .Bcols_empty_n(Bcols_empty_n),
    .Bcols_read(Loop_1_proc1_U0_Bcols_read)
);

blockmatmul_Loop_writeoutput_proc Loop_writeoutput_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(Loop_writeoutput_proc_U0_ap_start),
    .ap_done(Loop_writeoutput_proc_U0_ap_done),
    .ap_continue(Loop_writeoutput_proc_U0_ap_continue),
    .ap_idle(Loop_writeoutput_proc_U0_ap_idle),
    .ap_ready(Loop_writeoutput_proc_U0_ap_ready),
    .AB_address0(Loop_writeoutput_proc_U0_AB_address0),
    .AB_ce0(Loop_writeoutput_proc_U0_AB_ce0),
    .AB_q0(AB_t_q0),
    .AB_1_address0(Loop_writeoutput_proc_U0_AB_1_address0),
    .AB_1_ce0(Loop_writeoutput_proc_U0_AB_1_ce0),
    .AB_1_q0(AB_1_t_q0),
    .AB_2_address0(Loop_writeoutput_proc_U0_AB_2_address0),
    .AB_2_ce0(Loop_writeoutput_proc_U0_AB_2_ce0),
    .AB_2_q0(AB_2_t_q0),
    .AB_3_address0(Loop_writeoutput_proc_U0_AB_3_address0),
    .AB_3_ce0(Loop_writeoutput_proc_U0_AB_3_ce0),
    .AB_3_q0(AB_3_t_q0),
    .AB_4_address0(Loop_writeoutput_proc_U0_AB_4_address0),
    .AB_4_ce0(Loop_writeoutput_proc_U0_AB_4_ce0),
    .AB_4_q0(AB_4_t_q0),
    .AB_5_address0(Loop_writeoutput_proc_U0_AB_5_address0),
    .AB_5_ce0(Loop_writeoutput_proc_U0_AB_5_ce0),
    .AB_5_q0(AB_5_t_q0),
    .AB_6_address0(Loop_writeoutput_proc_U0_AB_6_address0),
    .AB_6_ce0(Loop_writeoutput_proc_U0_AB_6_ce0),
    .AB_6_q0(AB_6_t_q0),
    .AB_7_address0(Loop_writeoutput_proc_U0_AB_7_address0),
    .AB_7_ce0(Loop_writeoutput_proc_U0_AB_7_ce0),
    .AB_7_q0(AB_7_t_q0),
    .AB_8_address0(Loop_writeoutput_proc_U0_AB_8_address0),
    .AB_8_ce0(Loop_writeoutput_proc_U0_AB_8_ce0),
    .AB_8_q0(AB_8_t_q0),
    .AB_9_address0(Loop_writeoutput_proc_U0_AB_9_address0),
    .AB_9_ce0(Loop_writeoutput_proc_U0_AB_9_ce0),
    .AB_9_q0(AB_9_t_q0),
    .AB_10_address0(Loop_writeoutput_proc_U0_AB_10_address0),
    .AB_10_ce0(Loop_writeoutput_proc_U0_AB_10_ce0),
    .AB_10_q0(AB_10_t_q0),
    .AB_11_address0(Loop_writeoutput_proc_U0_AB_11_address0),
    .AB_11_ce0(Loop_writeoutput_proc_U0_AB_11_ce0),
    .AB_11_q0(AB_11_t_q0),
    .AB_12_address0(Loop_writeoutput_proc_U0_AB_12_address0),
    .AB_12_ce0(Loop_writeoutput_proc_U0_AB_12_ce0),
    .AB_12_q0(AB_12_t_q0),
    .AB_13_address0(Loop_writeoutput_proc_U0_AB_13_address0),
    .AB_13_ce0(Loop_writeoutput_proc_U0_AB_13_ce0),
    .AB_13_q0(AB_13_t_q0),
    .AB_14_address0(Loop_writeoutput_proc_U0_AB_14_address0),
    .AB_14_ce0(Loop_writeoutput_proc_U0_AB_14_ce0),
    .AB_14_q0(AB_14_t_q0),
    .AB_15_address0(Loop_writeoutput_proc_U0_AB_15_address0),
    .AB_15_ce0(Loop_writeoutput_proc_U0_AB_15_ce0),
    .AB_15_q0(AB_15_t_q0),
    .ABpartial_address0(Loop_writeoutput_proc_U0_ABpartial_address0),
    .ABpartial_ce0(Loop_writeoutput_proc_U0_ABpartial_ce0),
    .ABpartial_we0(Loop_writeoutput_proc_U0_ABpartial_we0),
    .ABpartial_d0(Loop_writeoutput_proc_U0_ABpartial_d0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_AB <= 1'b0;
    end else begin
        if (((Loop_1_proc1_U0_ap_done & Loop_1_proc1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_AB <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_AB <= ap_sync_channel_write_AB;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_AB_1 <= 1'b0;
    end else begin
        if (((Loop_1_proc1_U0_ap_done & Loop_1_proc1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_AB_1 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_AB_1 <= ap_sync_channel_write_AB_1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_AB_10 <= 1'b0;
    end else begin
        if (((Loop_1_proc1_U0_ap_done & Loop_1_proc1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_AB_10 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_AB_10 <= ap_sync_channel_write_AB_10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_AB_11 <= 1'b0;
    end else begin
        if (((Loop_1_proc1_U0_ap_done & Loop_1_proc1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_AB_11 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_AB_11 <= ap_sync_channel_write_AB_11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_AB_12 <= 1'b0;
    end else begin
        if (((Loop_1_proc1_U0_ap_done & Loop_1_proc1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_AB_12 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_AB_12 <= ap_sync_channel_write_AB_12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_AB_13 <= 1'b0;
    end else begin
        if (((Loop_1_proc1_U0_ap_done & Loop_1_proc1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_AB_13 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_AB_13 <= ap_sync_channel_write_AB_13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_AB_14 <= 1'b0;
    end else begin
        if (((Loop_1_proc1_U0_ap_done & Loop_1_proc1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_AB_14 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_AB_14 <= ap_sync_channel_write_AB_14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_AB_15 <= 1'b0;
    end else begin
        if (((Loop_1_proc1_U0_ap_done & Loop_1_proc1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_AB_15 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_AB_15 <= ap_sync_channel_write_AB_15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_AB_2 <= 1'b0;
    end else begin
        if (((Loop_1_proc1_U0_ap_done & Loop_1_proc1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_AB_2 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_AB_2 <= ap_sync_channel_write_AB_2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_AB_3 <= 1'b0;
    end else begin
        if (((Loop_1_proc1_U0_ap_done & Loop_1_proc1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_AB_3 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_AB_3 <= ap_sync_channel_write_AB_3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_AB_4 <= 1'b0;
    end else begin
        if (((Loop_1_proc1_U0_ap_done & Loop_1_proc1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_AB_4 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_AB_4 <= ap_sync_channel_write_AB_4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_AB_5 <= 1'b0;
    end else begin
        if (((Loop_1_proc1_U0_ap_done & Loop_1_proc1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_AB_5 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_AB_5 <= ap_sync_channel_write_AB_5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_AB_6 <= 1'b0;
    end else begin
        if (((Loop_1_proc1_U0_ap_done & Loop_1_proc1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_AB_6 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_AB_6 <= ap_sync_channel_write_AB_6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_AB_7 <= 1'b0;
    end else begin
        if (((Loop_1_proc1_U0_ap_done & Loop_1_proc1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_AB_7 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_AB_7 <= ap_sync_channel_write_AB_7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_AB_8 <= 1'b0;
    end else begin
        if (((Loop_1_proc1_U0_ap_done & Loop_1_proc1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_AB_8 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_AB_8 <= ap_sync_channel_write_AB_8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_AB_9 <= 1'b0;
    end else begin
        if (((Loop_1_proc1_U0_ap_done & Loop_1_proc1_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_AB_9 <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_AB_9 <= ap_sync_channel_write_AB_9;
        end
    end
end

assign ABpartial_address0 = Loop_writeoutput_proc_U0_ABpartial_address0;

assign ABpartial_address1 = 8'd0;

assign ABpartial_ce0 = Loop_writeoutput_proc_U0_ABpartial_ce0;

assign ABpartial_ce1 = 1'b0;

assign ABpartial_d0 = Loop_writeoutput_proc_U0_ABpartial_d0;

assign ABpartial_d1 = 32'd0;

assign ABpartial_we0 = Loop_writeoutput_proc_U0_ABpartial_we0;

assign ABpartial_we1 = 1'b0;

assign Arows_read = Loop_1_proc1_U0_Arows_read;

assign Bcols_read = Loop_1_proc1_U0_Bcols_read;

assign Loop_1_proc1_U0_AB_10_full_n = AB_10_i_full_n;

assign Loop_1_proc1_U0_AB_11_full_n = AB_11_i_full_n;

assign Loop_1_proc1_U0_AB_12_full_n = AB_12_i_full_n;

assign Loop_1_proc1_U0_AB_13_full_n = AB_13_i_full_n;

assign Loop_1_proc1_U0_AB_14_full_n = AB_14_i_full_n;

assign Loop_1_proc1_U0_AB_15_full_n = AB_15_i_full_n;

assign Loop_1_proc1_U0_AB_1_full_n = AB_1_i_full_n;

assign Loop_1_proc1_U0_AB_2_full_n = AB_2_i_full_n;

assign Loop_1_proc1_U0_AB_3_full_n = AB_3_i_full_n;

assign Loop_1_proc1_U0_AB_4_full_n = AB_4_i_full_n;

assign Loop_1_proc1_U0_AB_5_full_n = AB_5_i_full_n;

assign Loop_1_proc1_U0_AB_6_full_n = AB_6_i_full_n;

assign Loop_1_proc1_U0_AB_7_full_n = AB_7_i_full_n;

assign Loop_1_proc1_U0_AB_8_full_n = AB_8_i_full_n;

assign Loop_1_proc1_U0_AB_9_full_n = AB_9_i_full_n;

assign Loop_1_proc1_U0_AB_full_n = AB_i_full_n;

assign Loop_1_proc1_U0_ap_continue = (ap_sync_channel_write_AB_9 & ap_sync_channel_write_AB_8 & ap_sync_channel_write_AB_7 & ap_sync_channel_write_AB_6 & ap_sync_channel_write_AB_5 & ap_sync_channel_write_AB_4 & ap_sync_channel_write_AB_3 & ap_sync_channel_write_AB_2 & ap_sync_channel_write_AB_15 & ap_sync_channel_write_AB_14 & ap_sync_channel_write_AB_13 & ap_sync_channel_write_AB_12 & ap_sync_channel_write_AB_11 & ap_sync_channel_write_AB_10 & ap_sync_channel_write_AB_1 & ap_sync_channel_write_AB);

assign Loop_1_proc1_U0_ap_start = ap_start;

assign Loop_writeoutput_proc_U0_ap_continue = 1'b1;

assign Loop_writeoutput_proc_U0_ap_start = (AB_t_empty_n & AB_9_t_empty_n & AB_8_t_empty_n & AB_7_t_empty_n & AB_6_t_empty_n & AB_5_t_empty_n & AB_4_t_empty_n & AB_3_t_empty_n & AB_2_t_empty_n & AB_1_t_empty_n & AB_15_t_empty_n & AB_14_t_empty_n & AB_13_t_empty_n & AB_12_t_empty_n & AB_11_t_empty_n & AB_10_t_empty_n);

assign ap_channel_done_AB = ((ap_sync_reg_channel_write_AB ^ 1'b1) & Loop_1_proc1_U0_ap_done);

assign ap_channel_done_AB_1 = ((ap_sync_reg_channel_write_AB_1 ^ 1'b1) & Loop_1_proc1_U0_ap_done);

assign ap_channel_done_AB_10 = ((ap_sync_reg_channel_write_AB_10 ^ 1'b1) & Loop_1_proc1_U0_ap_done);

assign ap_channel_done_AB_11 = ((ap_sync_reg_channel_write_AB_11 ^ 1'b1) & Loop_1_proc1_U0_ap_done);

assign ap_channel_done_AB_12 = ((ap_sync_reg_channel_write_AB_12 ^ 1'b1) & Loop_1_proc1_U0_ap_done);

assign ap_channel_done_AB_13 = ((ap_sync_reg_channel_write_AB_13 ^ 1'b1) & Loop_1_proc1_U0_ap_done);

assign ap_channel_done_AB_14 = ((ap_sync_reg_channel_write_AB_14 ^ 1'b1) & Loop_1_proc1_U0_ap_done);

assign ap_channel_done_AB_15 = ((ap_sync_reg_channel_write_AB_15 ^ 1'b1) & Loop_1_proc1_U0_ap_done);

assign ap_channel_done_AB_2 = ((ap_sync_reg_channel_write_AB_2 ^ 1'b1) & Loop_1_proc1_U0_ap_done);

assign ap_channel_done_AB_3 = ((ap_sync_reg_channel_write_AB_3 ^ 1'b1) & Loop_1_proc1_U0_ap_done);

assign ap_channel_done_AB_4 = ((ap_sync_reg_channel_write_AB_4 ^ 1'b1) & Loop_1_proc1_U0_ap_done);

assign ap_channel_done_AB_5 = ((ap_sync_reg_channel_write_AB_5 ^ 1'b1) & Loop_1_proc1_U0_ap_done);

assign ap_channel_done_AB_6 = ((ap_sync_reg_channel_write_AB_6 ^ 1'b1) & Loop_1_proc1_U0_ap_done);

assign ap_channel_done_AB_7 = ((ap_sync_reg_channel_write_AB_7 ^ 1'b1) & Loop_1_proc1_U0_ap_done);

assign ap_channel_done_AB_8 = ((ap_sync_reg_channel_write_AB_8 ^ 1'b1) & Loop_1_proc1_U0_ap_done);

assign ap_channel_done_AB_9 = ((ap_sync_reg_channel_write_AB_9 ^ 1'b1) & Loop_1_proc1_U0_ap_done);

assign ap_done = Loop_writeoutput_proc_U0_ap_done;

assign ap_idle = ((1'b1 ^ AB_15_t_empty_n) & (1'b1 ^ AB_14_t_empty_n) & (1'b1 ^ AB_13_t_empty_n) & (1'b1 ^ AB_12_t_empty_n) & (1'b1 ^ AB_11_t_empty_n) & (1'b1 ^ AB_10_t_empty_n) & (1'b1 ^ AB_9_t_empty_n) & (1'b1 ^ AB_8_t_empty_n) & (1'b1 ^ AB_7_t_empty_n) & (1'b1 ^ AB_6_t_empty_n) & (1'b1 ^ AB_5_t_empty_n) & (1'b1 ^ AB_4_t_empty_n) & (1'b1 ^ AB_3_t_empty_n) & (1'b1 ^ AB_2_t_empty_n) & (1'b1 ^ AB_1_t_empty_n) & (1'b1 ^ AB_t_empty_n) & Loop_writeoutput_proc_U0_ap_idle & Loop_1_proc1_U0_ap_idle);

assign ap_ready = Loop_1_proc1_U0_ap_ready;

assign ap_sync_channel_write_AB = ((ap_channel_done_AB & Loop_1_proc1_U0_AB_full_n) | ap_sync_reg_channel_write_AB);

assign ap_sync_channel_write_AB_1 = ((ap_channel_done_AB_1 & Loop_1_proc1_U0_AB_1_full_n) | ap_sync_reg_channel_write_AB_1);

assign ap_sync_channel_write_AB_10 = ((ap_channel_done_AB_10 & Loop_1_proc1_U0_AB_10_full_n) | ap_sync_reg_channel_write_AB_10);

assign ap_sync_channel_write_AB_11 = ((ap_channel_done_AB_11 & Loop_1_proc1_U0_AB_11_full_n) | ap_sync_reg_channel_write_AB_11);

assign ap_sync_channel_write_AB_12 = ((ap_channel_done_AB_12 & Loop_1_proc1_U0_AB_12_full_n) | ap_sync_reg_channel_write_AB_12);

assign ap_sync_channel_write_AB_13 = ((ap_channel_done_AB_13 & Loop_1_proc1_U0_AB_13_full_n) | ap_sync_reg_channel_write_AB_13);

assign ap_sync_channel_write_AB_14 = ((ap_channel_done_AB_14 & Loop_1_proc1_U0_AB_14_full_n) | ap_sync_reg_channel_write_AB_14);

assign ap_sync_channel_write_AB_15 = ((ap_channel_done_AB_15 & Loop_1_proc1_U0_AB_15_full_n) | ap_sync_reg_channel_write_AB_15);

assign ap_sync_channel_write_AB_2 = ((ap_channel_done_AB_2 & Loop_1_proc1_U0_AB_2_full_n) | ap_sync_reg_channel_write_AB_2);

assign ap_sync_channel_write_AB_3 = ((ap_channel_done_AB_3 & Loop_1_proc1_U0_AB_3_full_n) | ap_sync_reg_channel_write_AB_3);

assign ap_sync_channel_write_AB_4 = ((ap_channel_done_AB_4 & Loop_1_proc1_U0_AB_4_full_n) | ap_sync_reg_channel_write_AB_4);

assign ap_sync_channel_write_AB_5 = ((ap_channel_done_AB_5 & Loop_1_proc1_U0_AB_5_full_n) | ap_sync_reg_channel_write_AB_5);

assign ap_sync_channel_write_AB_6 = ((ap_channel_done_AB_6 & Loop_1_proc1_U0_AB_6_full_n) | ap_sync_reg_channel_write_AB_6);

assign ap_sync_channel_write_AB_7 = ((ap_channel_done_AB_7 & Loop_1_proc1_U0_AB_7_full_n) | ap_sync_reg_channel_write_AB_7);

assign ap_sync_channel_write_AB_8 = ((ap_channel_done_AB_8 & Loop_1_proc1_U0_AB_8_full_n) | ap_sync_reg_channel_write_AB_8);

assign ap_sync_channel_write_AB_9 = ((ap_channel_done_AB_9 & Loop_1_proc1_U0_AB_9_full_n) | ap_sync_reg_channel_write_AB_9);

endmodule //blockmatmul
